{"version":3,"sources":["components/layout/Header.js","components/layout/Footer.js","components/layout/MetaData.js","components/home/Home.js","components/layout/ProjectTemplate.js","components/projects/Projects.js","components/blogs/Blogs.js","components/layout/Code.js","components/blogs/archGuide/ArchGuide.js","components/blogs/importLinuxCommand/ImportantLinuxCommand.js","App.js","index.js"],"names":["Header","useState","status","setStatus","id","style","background","className","to","onClick","Footer","pathname","target","MetaData","title","Helmet","Home","type","src","alt","ProjectTemplate","liveLink","srcLink","heading1","heading2","para","imgsrc","Projects","Blogs","border","Code","code","ArchGuide","textAlign","width","borderRadius","ImportantLinuxCommand","App","search","useLocation","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f20d088.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    const [status, setStatus] = useState(false);\r\n\r\n    const toggleHandler = () => {\r\n        setStatus(!status);\r\n    }\r\n    return (\r\n        <section id=\"header\" style={{background: \"#29323c\"}} className={status ? 'active' : ''}>\r\n            <div className=\"header container\" >\r\n                <div className=\"nav-bar\">\r\n                    <div className=\"brand\">\r\n                        <Link to=\"/\"><h1><span>A</span>RJUN <span>K</span>UMAR</h1></Link>\r\n                    </div>\r\n                    <div className=\"nav-list\" >\r\n                        <div onClick={toggleHandler} className={`hamburger ${status ? 'active' : ''}`}>\r\n                            <div className=\"bar\" ></div>\r\n                        </div>\r\n                        <ul className={status ? 'active' : ''}>\r\n                            <li><Link to=\"/\" data-after=\"Home\">Home</Link></li>\r\n                            <li><Link to=\"/projects\" data-after=\"Projects\">Projects</Link></li>\r\n                            <li><Link to=\"/blogs\" data-after=\"Services\">Blogs</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <section id=\"footer\">\r\n            <div className=\"footer container\">\r\n                <div className=\"brand\"><h1><span>A</span>rjun <span>K</span>umar</h1></div>\r\n                <h2>Full Stack Web Developer</h2>\r\n                <div className=\"social-media\">\r\n                    <h1>FOLLOW ME ON SOCIAL MEDIAS</h1>\r\n                    <div className=\"social-icons\">\r\n                        <Link to={{pathname : \"https://www.facebook.com/profile.php?id=100018911007097\"}} target=\"_blank\"><i className=\"fa fa-facebook-square\" aria-hidden=\"true\"></i></Link>\r\n                        <Link to={{pathname : \"https://api.whatsapp.com/send?phone=919608544916\"}} target=\"_blank\"><i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i></Link>\r\n                        <Link to={{pathname : \"https://www.instagram.com/arjun_computer_geek/\"}} target=\"_blank\" className=\"insta\"><i className=\"fa fa-instagram\" aria-hidden=\"true\"></i></Link>\r\n                        <Link to={{pathname : \"https://twitter.com/arjun_comp_geek?s=09\"}} target=\"_blank\"><i className=\"fa fa-twitter\" aria-hidden=\"true\"></i></Link>\r\n                        <Link to={{pathname : \"https://github.com/arjun-computer-geek/\"}} target=\"_blank\"><i className=\"fa fa-github\" aria-hidden=\"true\"></i></Link>\r\n                        <Link to={{pathname : \"https://www.linkedin.com/in/arjun-kumar-a752731a2\"}} target=\"_blank\"><i className=\"fa fa-linkedin-square\" aria-hidden=\"true\"></i></Link>\r\n                    </div>\r\n                </div>\r\n                <p>Copyright &copy; 2021 Arjun. All rights reserved</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst MetaData = ({title}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{`${title} - arjun-computer-geek`}</title>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default MetaData\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <MetaData title={'Arjun | Portfolio'}/>\r\n            <section id=\"home-page\">\r\n                <div className=\"container home-page\">\r\n                    <div>\r\n                        <h1>Hey,<span></span></h1> \r\n                        <h1>I am <span></span></h1>\r\n                        <h1>Arjun <span></span></h1>\r\n                        <Link to=\"/projects\" type=\"button\" className=\"portfolio-text\">Portfolio</Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section  id=\"about\">\r\n                <div className=\"about container\">\r\n                    <div className=\"col-left\">\r\n                        <div className=\"about-img\">\r\n                            <img src=\"./img/profile.jpeg\" alt=\"img\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-right\">\r\n                        <h1 className=\"section-title\">About <span>me</span></h1>\r\n                        <h2>Full Stack Web Developer</h2>\r\n                        <p><br/>Hi there!, <br/>\r\n                            I'm familiar with  HTML5 &amp; CSS3, JavaScript, NodeJs, Express, ReactJs, Git, Web Hosting and other Web technologies.<br/><br/>\r\n\r\n                            <b>Thank You!</b><br/><br/>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section id=\"projects\">\r\n                <div className=\"projects container\">\r\n                    <div className=\"projects-head\">\r\n                        <h1 className=\"section-title\"><span> Pro</span>jects</h1>\r\n                    </div>\r\n                    <div className=\"all-projects\">\r\n                        <div className=\"project-item\">\r\n                            <p>Learn - Build - Showcase. That's what I like to do. You can browse my projects hosted online and it's source code.</p>\r\n                            \r\n                            <Link to=\"/projects\" type=\"button\">Browse</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section id=\"blogs\">\r\n                <div className=\"container services\">\r\n                    <div className=\"services-head\">\r\n                        <h1 className=\"section-title\">BLOG<span>S</span></h1>\r\n                    </div>\r\n                    <div className=\"services-body\">\r\n                        <p>I wrote some blogs on  tech related Topics. It helps me document my journey of learning. Go and check it out. 👇👇👇👇 </p>\r\n                        <Link className=\"read\" to=\"/blogs\" type=\"button\">Read</Link>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section id=\"contact\">\r\n                <div className=\"contact container\">\r\n                    <div><h1 className=\"section-title\">Contact <span>info</span></h1></div>\r\n                    <div className=\"contact-items\">\r\n                        <div className=\"contact-item\">\r\n                            <div className=\"icon\"><i className=\"fa fa-phone-square fa-5x\" aria-hidden=\"true\"></i></div>\r\n                            <div className=\"contact-info\">\r\n                                <h2>Phone</h2>\r\n                                <h3>+91 9608544916</h3>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"contact-item\">\r\n                            <div className=\"icon\"><i className=\"fa fa-envelope fa-5x\" aria-hidden=\"true\"></i></div>\r\n                            <div className=\"contact-info\">\r\n                                <h2>Email</h2>\r\n                                <h3>arjun2000raj@gmail.com</h3>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"contact-item\">\r\n                            <div className=\"icon\"><i className=\"fa fa-map-marker fa-5x\" aria-hidden=\"true\"></i></div>\r\n                            <div className=\"contact-info\">\r\n                                <h2>Address</h2>\r\n                                <h3>Bazar samiti, Patna, Bihar, India</h3>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectTemplate = ({liveLink, srcLink, heading1, heading2, para, imgsrc}) => {\r\n    return (\r\n        <div className=\"project-item\">\r\n            <div className=\"project-info\">\r\n                <div className=\"view-btn\">\r\n                    <Link to={{pathname: liveLink}} target=\"_blank\">View</Link>\r\n                    <Link to={{pathname: srcLink}} target=\"_blank\">View Codes</Link>\r\n                </div>\r\n\r\n                <h1>{heading1}</h1>\r\n                <h2>{heading2}</h2><br/>\r\n                <p>{para}</p>\r\n            </div>\r\n            \r\n            <div className=\"project-img\">\r\n                <img src={imgsrc} alt='project-img'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectTemplate\r\n","import React from 'react'\r\nimport MetaData from '../layout/MetaData'\r\nimport Project from '../layout/ProjectTemplate'\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <>\r\n            <MetaData title={'Projects'} />\r\n            <section id=\"projects\">\r\n                <div className=\"projects container\">\r\n                    <div className=\"projects-head\">\r\n                        <h1 className=\"section-title\">MY <span> PROJECTS</span></h1>\r\n                    </div>\r\n                    <div className=\"all-projects\">\r\n                        <Project\r\n                            liveLink={`https://distracted-noether-a6fab6.netlify.app/`}\r\n                            srcLink={`https://github.com/arjun-computer-geek/stock-app.git`}\r\n                            heading1={`Stock App`}\r\n                            heading2={`Made with vanila Js`}\r\n                            para={`An app which will clculate profit and los and its percentage in stock.`}\r\n                            imgsrc={`./img/project11.JPG`}\r\n                        />\r\n                        <Project\r\n                            liveLink={`https://arjun-computer-geek.github.io/is-your-birthday-palindrome/`}\r\n                            srcLink={`https://github.com/arjun-computer-geek/is-your-birthday-palindrome.git`}\r\n                            heading1={`Is Your Birthday Palindrome`}\r\n                            heading2={`Made with vanila Js`}\r\n                            para={`An app which will check the is your birthday palindrome or not? And return the next palindrome date.`}\r\n                            imgsrc={`./img/project10.JPG`}\r\n                        />\r\n                        <Project\r\n                            liveLink={`https://youthful-varahamihira-746096.netlify.app/`}\r\n                            srcLink={`https://github.com/arjun-computer-geek/fun-with-triangle.git`}\r\n                            heading1={`Fun with triangle`}\r\n                            heading2={`Made with the react js.`}\r\n                            para={`An app made with reactJs. Using BrowserRouter, Router, Route etc.`}\r\n                            imgsrc={`./img/project9.PNG`}\r\n                        />\r\n                        <Project\r\n                            liveLink={`https://arjun-computer-geek.github.io/is-your-birthday-lucky/`}\r\n                            srcLink={`https://github.com/arjun-computer-geek/is-your-birthday-lucky.git`}\r\n                            heading1={`Is Your Birthday Lucky?`}\r\n                            heading2={`Made with Vanilla JavaScript.`}\r\n                            para={`An app which check wheather your birthday is lucky or not.`}\r\n                            imgsrc={`./img/project8.png`}\r\n                        />\r\n                        <Project\r\n                            liveLink={`https://arjun-computer-geek.github.io/cash-register/`}\r\n                            srcLink={`https://github.com/arjun-computer-geek/cash-register.git`}\r\n                            heading1={`Cash register`}\r\n                            heading2={`Made with Vanilla JavaScript`}\r\n                            para={`An app to help for give the change to the customer.`}\r\n                            imgsrc={`./img/project7.png`}\r\n                        />\r\n\r\n                        <Project\r\n                            liveLink={`https://awesome-borg-c4ff4c.netlify.app/`}\r\n                            srcLink={`https://github.com/arjun-computer-geek/movie-recommendation-app.git`}\r\n                            heading1={`Movie Recommendation App`}\r\n                            heading2={`Made with ReactJs and hooks`}\r\n                            para={`A movie recommendation app that help you to choose the movies on the basis of its gener.`}\r\n                            imgsrc={`./img/project6.png`}\r\n                        />\r\n\r\n                        <Project\r\n                            liveLink={`https://stoic-pike-a07176.netlify.app/`}\r\n                            srcLink={`https://github.com/arjun-computer-geek/react-emoji-interpreter.git`}\r\n                            heading1={`React Emoji interprater`}\r\n                            heading2={`Made with react and hooks`}\r\n                            para={`An app made with reactjs which interpret as well as show the name of emoji present in our database.`}\r\n                            imgsrc={`./img/project5.png`}\r\n                        />\r\n\r\n                        <Project\r\n                            liveLink={`https://compassionate-carson-43f6ab.netlify.app/`}\r\n                            srcLink={`https://github.com/arjun-computer-geek/groot-translator.git`}\r\n                            heading1={`Groot Translator app`}\r\n                            heading2={`Fun to Translate`}\r\n                            para={`Let's talk in groot language.`}\r\n                            imgsrc={`./img/project4.png`}\r\n                        />\r\n\r\n                        <Project\r\n                            liveLink={`https://arjun-computer-geek.github.io/banana-translation/`}\r\n                            srcLink={`https://github.com/arjun-computer-geek/banana-translation.git`}\r\n                            heading1={`Banana Translator app`}\r\n                            heading2={`Fun to Translate`}\r\n                            para={`Used mock api. Fun to translate.`}\r\n                            imgsrc={`./img/project3.png`}\r\n                        />\r\n\r\n                        <Project\r\n                            liveLink={`https://replit.com/@arjun-computer/Levezero-CLI-Game-Mark-2?v=1`}\r\n                            srcLink={`https://github.com/arjun-computer-geek/level-zero-CLI-game-mark-2.git`}\r\n                            heading1={`CLI Quiz Game`}\r\n                            heading2={`Fun to play`}\r\n                            para={`It is basic CLI Quiz Game`}\r\n                            imgsrc={`./img/project2.jpg`}\r\n                        />\r\n\r\n                        <Project\r\n                            liveLink={`https://replit.com/@arjun-computer/CLI-Game-Mark-1?v=1`}\r\n                            srcLink={`https://github.com/arjun-computer-geek/CLI-Game-Mark-1`}\r\n                            heading1={`CLI Quiz Game`}\r\n                            heading2={`Fun to play`}\r\n                            para={`It is basic CLI Quiz Game`}\r\n                            imgsrc={`./img/project1.JPG`}\r\n                        />\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../layout/MetaData'\r\nimport './Blogs.css'\r\n\r\nconst Blogs = () => {\r\n    return (\r\n        <>\r\n            <MetaData title={'Blogs'} />\r\n            <section id=\"blogs\">\r\n                <div className=\"container services\">\r\n                    <div className=\"services-head\">\r\n                        <h1 className=\"section-title\">BLOG<span>S</span></h1>\r\n                        <p>I wrote some blogs on  tech related Topics. It helps me document my journey of learning. Go and check it out. 👇👇👇👇 </p>\r\n                    </div>\r\n                    <div className=\"services-body\">\r\n\r\n                        <Link className=\"blog-link\"  style={{ border: \"none\" }} to=\"/important-linux-command\">\r\n                            <div className=\"services-item\">\r\n                                <div className=\"icon\"><i className=\"fa fa-cogs fa-3x\"></i></div>\r\n                                <h2>Important Linux Command</h2>\r\n                                <p>A guide for important linux command</p>\r\n                            </div>\r\n                        </Link>\r\n\r\n                        <Link  className=\"blog-link\" style={{ border: \"none\" }} to=\"/arch_guide\">\r\n                            <div className=\"services-item\">\r\n                                <div className=\"icon\"><i className=\"fa fa-cogs fa-3x\"></i></div>\r\n                                <h2>Arch Installation Guide</h2>\r\n                                <p>A Simple and Step By Step Installation Guide to install Arch Linux along with the Windows 10 [Dual boot].</p>\r\n                            </div>\r\n                        </Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Blogs\r\n","import React from 'react'\r\nimport './Code.css'\r\n\r\nconst Code = ({code}) => {\r\n    return (\r\n        <pre className=\"language-bash\">\r\n            <code className=\"language-bash\">{code}</code>\r\n        </pre>\r\n    )\r\n}\r\n\r\nexport default Code\r\n","import React from 'react'\r\nimport MetaData from '../../layout/MetaData'\r\nimport './ArchGuide.css'\r\nimport { Link } from 'react-router-dom'\r\nimport Code from './../../layout/Code';\r\n\r\nconst ArchGuide = () => {\r\n    return (\r\n        <>\r\n            <MetaData title={'Arch Installation'} />\r\n            <section className=\"blogs\">\r\n                <div className=\"arch_blog\">\r\n                    <h1>How to install Arch Linux along with Winodws10 (Dual Boot)</h1>\r\n                    <img className=\"thumbnail\" src=\"/img/arch_thumbnail.png\" alt=\"arch_thumbnail\" />\r\n                    <h3>Arjun Kumar </h3>\r\n                    <span>July, 2021</span>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p>\r\n                        <b><Link to={{ pathname: \"https://archlinux.org/\" }} target=\"_blank\">Arch Linux </Link></b>\r\n                        is a lightweight and flexible linux distribution. It works on KISS(Keep it Simple &amp; Stupid) Principal and rolling release.\r\n                    </p>\r\n                    <br />\r\n                    <br />\r\n                    <p>\r\n                        Hey! Here We are going to install arch linux along with windows 10 with dual boot. A step by step guide. Please follow all the steps carefully &apm; read instructions before run any commands otherwise it can harm your system or You may loose all your data. 🙏\r\n                    </p>\r\n                    <br />\r\n                    <br />\r\n                    <p className=\"warning\">\r\n                        <strong><code>Warning!</code></strong>\r\n                        In this methods we will do wipe or formate disk. If any mistake happed then you will loose your all data so Please before follow these steps backup your data. 🙏🙏\r\n                    </p>\r\n                    <br />\r\n                    <br />\r\n                    <p className=\"info\">\r\n                        <strong>Requirements for installing Arch Linux</strong><br />\r\n                        – A x86_64 (i.e. 64 bit) compatible machine<br />\r\n                        – Minimum 512 MB of RAM (recommended 2 GB)<br />\r\n                        – At least 2 GB of free disk space (recommended 20 GB <br />\r\n                        &nbsp;&nbsp;&nbsp;for basic usage with a desktop environment)<br />\r\n                        – An active internet connection<br />\r\n                        – A USB drive with minimum 2 GB of storage capacity<br />\r\n                        – Familiarity with Linux command line<br />\r\n                    </p>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <h2>Step 1 : Download the Arch Linux Iso</h2>\r\n                    <br />\r\n                    <p>\r\n                        Download the ISO from the <Link to={{ pathname: \"https://archlinux.org/download/\" }} target=\"_blank\"> Arch Linux download page</Link>. You can download <i>directly via link</i> or via <i>Bitorrent</i>.\r\n                    </p>\r\n                    <br />\r\n                    <h2>Step 2 : Create a live USB</h2>\r\n                    <br />\r\n                    <p>To create a live usb the easiest method is to create via rufus software. <br /> <b style={{ textAlign: 'center' }}>or</b>\r\n                        <p> For more methods you can check <Link to={{ pathname: \"https://wiki.archlinux.org/title/USB_flash_installation_medium\" }} target=\"_blank\"> USB installation medium page.</Link> </p>\r\n                    </p>\r\n                    <br />\r\n                    <div>\r\n                        <p>\r\n                            <strong>Creating Bootable Device via rufus : </strong>\r\n                            <br />\r\n                            &nbsp; - First of all You need a USB drive which is empty.\r\n                            <br />\r\n                            &nbsp; - Download <Link to={{ pathname: \"https://rufus.ie/en_US/\" }} target=\"_blank\">Rufus.</Link>\r\n                            <br />\r\n                            &nbsp; - Run downloaded exe. Then You will see something like this. 👇👇👇\r\n                            <br />\r\n                            &nbsp; - Then Click Start.\r\n                            <br />\r\n                            <br />\r\n                            <img style={{ width: '100%', borderRadius: '10px' }} src=\"/img/rufus_img.JPG\" alt={`installation-img`} />\r\n                            <br />\r\n                            <br />\r\n                        </p>\r\n                        <p className=\"note\">\r\n                            <strong>Note : </strong>\r\n                            <br />\r\n                            &nbsp; - Please Check Partition Scheme to GPT.\r\n                            <br />\r\n                            &nbsp; - Please Check Target System to UEFI.\r\n                        </p>\r\n                        <br />\r\n                        <br />\r\n                        <p>\r\n                            <h2>Step 3 : Create a Partition for Linux</h2>\r\n                        </p>\r\n                        <br />\r\n                        <p>\r\n                            To create a partition :\r\n                            <br />\r\n                            &nbsp; - Right Click on \"My Computer/This PC &gt; manage &gt; Disk Management\" .\r\n\r\n                            <br />\r\n                            &nbsp; - Right Click that partition which you want to give for linux.\r\n\r\n                            <br />\r\n                            &nbsp; - Click on \"Shrink Volume\".\r\n\r\n                            <br />\r\n                            &nbsp; - Give the perticula space to that drive and click <b>Shrink</b>.\r\n                            <br />\r\n                            It will look like something like this.👇👇👇\r\n                            <br />\r\n                            <br />\r\n                            <img style={{ width: '100%', borderRadius: '10px' }} src=\"/img/add_partition.JPG\" alt={`partition-img`} />\r\n                        </p>\r\n                        <br />\r\n                        <br />\r\n                        <p>\r\n                            <h2>Step 4 : Restart and Reboot to the Arch Linux</h2>\r\n                        </p>\r\n                        <br />\r\n                        <p>\r\n                            Restart the windows system. Boot from the live usb which we have created.\r\n                        </p>\r\n                        <p className=\"note\">\r\n                            <strong>Note : </strong>\r\n                            <br />\r\n                            &nbsp; - Please ensure the secure boot is disable.\r\n                            <br />\r\n                            &nbsp; - Please Boot System to UEFI.\r\n                        </p>\r\n                        <br />\r\n                        <br />\r\n                        <p>\r\n                            <h2>Step 5 : Let's begin the installation</h2>\r\n                        </p>\r\n                        <br />\r\n                            On the bootup scree, you will be presented with options as shown below. Select the first option - Arch Linux Install medium (x89_64, UEFI) and hit ENTER.\r\n                            <br />\r\n                            <br />\r\n                            <img style={{ width: '100%', borderRadius: '10px' }} src=\"/img/slelect_option.webp\" alt={`select-option-img`} />\r\n                            <br />\r\n                            <br />\r\n                            This initialize Arch Linux as evidenced by the boot messages on the screen.\r\n                            <br />\r\n                            <br />\r\n                            <img style={{ width: '100%', borderRadius: '10px' }} src=\"/img/booot_message.webp\" alt={`boot-msg-img`} />\r\n                            <br />\r\n                            <br />\r\n                            After a few seconds, this ushers you to the prompt as shown below.\r\n                            <br />\r\n                            <br />\r\n                            <img style={{ width: '100%', borderRadius: '10px' }} src=\"/img/initial_view.webp\" alt={`initial-view-img`} />\r\n                            <br />\r\n                            <br />\r\n                            To confirm that you have EFI support, run the command:\r\n                            <Code code={`# ls /sys/firmware/efi/efivars`} />\r\n                            You should get some entries on the screen as shown. If nothing is listed on your screen, then it means you are using MBR and this guide won’t work for you in configuring up a dual boot setup.\r\n                            <br />\r\n                            <br />\r\n                            <img style={{ width: '100%', borderRadius: '10px' }} src=\"/img/verify_efi.webp\" alt={`verify-efi-img`} />\r\n                            <br />\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 6 : Connect to the internet</h2>\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                As you begin the installation, you might want to ensure that you have internet connectivity. Internet connectivity is crucial in setting time and date.\r\n                                <br />\r\n                                To connect to the internet please type follow command:\r\n                                <br />\r\n                                <br />\r\n                                To get an interactive prompt do:\r\n                                <Code code={`$ iwctl`} />\r\n                                First, if you do not know your wireless device name, list all Wi-Fi devices:\r\n                                <Code code={`[iwd]# device list`} />\r\n                                Then, to scan for networks:\r\n                                <Code code={`[iwd]# station device scan`} />\r\n                                You can then list all available networks:\r\n                                <Code code={`[iwd]# station device get-networks`} />\r\n                                Finally, to connect to a network:\r\n                                <Code code={`[iwd]# station device connect SSID`} />\r\n                                Finally Exit from the [iwd] prompt:\r\n                                <Code code={`[iwd]# exit`} />\r\n                                For check Your internet connection connectivity use <b>ping</b>\r\n                                <br />\r\n                                You can ping Google’s DNS as shown:\r\n                                <Code code={`# ping 8.8.8.8 -c 4`} />\r\n                                You should get a positive reply as shown.\r\n                                <br />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/confirm-internet.webp\" alt={`confirm-internet`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                Use the <code>Ctrl + c</code> for exit from running process.\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 7 : Update time and date</h2>\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                Next, we are going to update the system time and date using the timedatectl command as shown.\r\n                                <Code code={`# timedatectl set-ntp true`} />\r\n                                You can thereafter confirm the time and date using the command\r\n                                <Code code={`# timedatectl status`} />\r\n\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 8 : Create &amp; format Linux partitions</h2>\r\n                            </p>\r\n                            <br />\r\n\r\n                            <p>\r\n                                Next, we are going to partition our hard drive and create some Linux partitions. An easy way of doing this is using the cfdisk utility. Run the command:\r\n                                <Code code={`# cfdisk`} />\r\n                                This displays all the partitions available including Windows partitions.\r\n                                <br />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/view-all-partition.webp\" alt={`view-all-partition`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                As you can see, we have some free space of 19.5G that we created earlier in step 1 from shrinking drive C on the Windows side. Using this partition, we shall create the following Linux partitions :\r\n                                <br />\r\n                                <br />\r\n                                <ul>\r\n                                    <li>Root partition &nbsp; &nbsp; &nbsp; &nbsp;/ &nbsp; &nbsp; &nbsp; &nbsp;12G</li>\r\n                                    <li>swap partition  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;4G</li>\r\n                                </ul>\r\n                                <br />\r\n                                To achieve this, we will navigate to the free space with 19.5G just after /dev/sda3 volume and hit ENTER. We will then specify the volume as 12G for the root partition as shown below. Then hit ENTER.\r\n                                <br />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/create-root-partition.webp\" alt={`create-root-partition`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                The root partition will be created with the Linux filesystem type as shown.\r\n                                <br />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/root-partition-created.webp\" alt={`root-partition-created`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                Next, we will create another partition for swap. Using the same method, we will proceed to the remaining free partition of 7G and select the ‘New’ option.\r\n                                <br />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/create-new-partition.webp\" alt={`create-new-partition`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                Specify the partition size as 4G\r\n                                <br />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/specify-partition.webp\" alt={`specify-partition`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                Since this will be our swap partition, we need to go the extra step and modify the partition type. Therefore, we will select the ‘type’ option and hit ENTER.\r\n                                <br />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/change-type-of-partition.webp\" alt={`change-type-of-partition`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                In the list that appears, select ‘Linux Swap’ and hit ENTER.\r\n                                <br />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/set-to-Linux-swap.webp\" alt={`set-to-Linux-swap`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                At this point, both the root and Linux swap partitions are created as seen from the partition table below.\r\n                                <br />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/Linux-swap-created.webp\" alt={`Linux-swap-created`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                To save the partitions, select the ‘Write’ option and hit ENTER.\r\n                                <br />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/select-write-option.webp\" alt={`select-write-option`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                When prompted if you want to write the partition to disk, simply type ‘yes’ and hit ENTER.\r\n                                <br />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/accept-writing-changes.webp\" alt={`accept-writing-changes`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                To exit cfdisk utility, select the ‘Quit’ option and hit ENTER.\r\n                                <br />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/exit-cfdisk.webp\" alt={`exit-cfdisk`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 9 : Format and mount the partitions</h2>\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                For the partitions to become usable and available for use, we need to format them and later mount them.\r\n                                <br />\r\n                                To format the root partition, run the command:\r\n                                <Code code={`# mkfs.ext4 /dev/sda5`} />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/Format-root-partition.webp\" alt={`Format-root-partition`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                For swap partition, use the command:\r\n                                <Code code={`# mkswap /dev/sda6`} />\r\n                                Then enable swap using the swapon command shown:\r\n                                <Code code={`# swapon /dev/sda6`} />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/Format-swap.webp\" alt={`Format-swap`}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                                Next, mount the root partition to the /mnt directory\r\n                                <Code code={`# mount /dev/sda5 /mnt`} />\r\n                                Additionally, we are going to create a directory for the EFI partition on which we will mount the Windows EFI system which , in our case is located on the /dev/sda1 partition.\r\n                                <Code code={`# mkdir /mnt/efi`} />\r\n                                Then mount the EFI partition on the EFI mount point.\r\n                                <Code code={`# mount /dev/sda1 /mnt/efi`} />\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 10 : Install base system and other required Linux firmware packages</h2>\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                Next, we are going to install the central packages for our Linux system including the base and Linux-firmware packages.\r\n                                <Code code={`# pacstrap /mnt base linux linux-firmware`} />\r\n                                This is going to take quite some time. At this point, you can take a much-deserved break and head out for a stroll and grab some coffee.\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 11 : Generate fstab file</h2>\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                The next step will be to generate the fstab file on the /mnt directory as follows.\r\n                                <Code code={`# genfstab -U /mnt >> /mnt/etc/fstab`} />\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 12 : Change Directory</h2>\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                After generating the ftab file, navigate to the newly created root filesystem\r\n                                <Code code={`# arch-chroot /mnt`} />\r\n                                You can verify that you are in the root filesystem using the command as shown.\r\n                                <Code code={`# ls`} />\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 13 : Setup timezone</h2>\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                To set time zone :\r\n                                <Code code={`# ln -sf /usr/share/zoneinfo/Region/City /etc/localtime`} />\r\n                                Run hwclock to generate /etc/adjtime:\r\n                                <Code code={`# hwclock --systohc`} />\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 14 : Set up locale</h2>\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                The locale determines the system language, currency format, numbering and date on your system. This information is contained in the /etc/locale.gen  file. So, open the file using the vim editor.\r\n                                <Code code={`# vim /etc/locale.gen`} />\r\n                                <p className=\"note\">\r\n                                    <strong>Note : </strong> To install the vim editor, use the pacman command as follows:\r\n                                </p>\r\n                                <Code code={`# pacman -Sy vim`} />\r\n                                Once you have accessed the file, scroll and uncomment your preferred locale. In this case, we have decided to go with en_US.UTF-8 UTF-8\r\n                                <br />\r\n                                Save and exit the file. Next generate the locale configuration using the command.\r\n                                <Code code={`# locale-gen`} />\r\n                                Next, create a new locale configuration file and save the locale as shown.\r\n                                <Code code={`# echo \"LANG=EN_US.UTF-8\" > /etc/locale.conf`} />\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 15 : Set up hostname</h2>\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                Next, we are going to configure the hostname of our Arch System. First, create a new file and specify the hostname as shown.\r\n                                <Code code={`# echo linuxtechi > /etc/hostname`} />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/set-hostname.webp\" alt={`set-hostname`}\r\n                                />\r\n                                <br />\r\n                                Afterwards, modify the /etc/hosts file as follows.\r\n                                <Code code={`# echo \"127.0.1.1  linuxtechi\" >> /etc/hosts`} />\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 16 : Install netctl Network Manager</h2>\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                To use the internet once the installation is complete and upon a reboot, we need to install a network manager. In this example we wil install the netctl network manager as follows\r\n                                <Code code={`# pacman -S networkmanager`} />\r\n                                <b>Enable NetworkManager</b>\r\n                                <br />\r\n                                After installation, you should start/enable NetworkManager.service. Once the NetworkManager daemon is started, it will automatically connect to any available \"system connections\" that have already been configured. Any \"user connections\" or unconfigured connections will need nmcli or an applet to configure and connect.\r\n                                <Code code={`# systemctl start NetworkManager.service`} />\r\n                                <Code code={`# systemctl enable NetworkManager.service`} />\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 17 : Create a regular user</h2>\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                Next, we will create a regular user called  linuxtechi and place him in the wheel group as follows.\r\n                                <Code code={`# useradd -G wheel -m linuxtechi`} />\r\n                                The next step will be to assign a password to the user.\r\n                                <Code code={`# passwd linuxtechi`} />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/create-a-user.webp\" alt={`create-a-user`}\r\n                                />\r\n                                <br />\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                <h2>Step 18 : Install GRUB bootloader</h2>\r\n                            </p>\r\n                            <br />\r\n                            <p>\r\n                                We are getting close to the finish line. In this step, we will install the  grub bootloader to enable us boot into our Arch Linux system upon a reboot.\r\n                                <br />\r\n                                We will install the grub bootloader package alongside the efi boot manager package since we are using the UEFI mode.\r\n                                <Code code={`# pacman -S grub efibootmgr`} />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/Install-grub-efibootmgr.webp\" alt={`Install-grub-efibootmgr`}\r\n                                />\r\n                                <br />\r\n                                Next, install the os-prober package which will enable Arch Linux to detect the Windows operating system.\r\n                                <Code code={`# pacman -S os-prober`} />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/Install-os-prober.webp\" alt={`Install-os-prober`}\r\n                                />\r\n                                <br />\r\n                                Then install grub on the EFI directory as shown.\r\n                                <Code code={`# grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB`} />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/install-grub-bootloader.webp\" alt={`install-grub-bootloader`}\r\n                                />\r\n                                <br />\r\n                                And install a grub configuration file as shown.\r\n                                <Code code={`# grub-mkconfig -o /boot/grub/grub.cfg`} />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/generate-grub-file.webp\" alt={`generate-grub-file`}\r\n                                />\r\n                                <br />\r\n                                The last line is an indication that Arch has detected the presence of Windows Boot manager on /dev/sda1 partition. Perfect!\r\n                                <br />\r\n                                The finally, set a password for the root user as shown.\r\n                                <Code code={`# passwd`} />\r\n                                <br />\r\n                                <img\r\n                                    style={{ width: '100%', borderRadius: '10px' }}\r\n                                    src=\"/img/set-root-passwd.webp\" alt={`set-root-passwd`}\r\n                                />\r\n                                <br />\r\n                                Then exit and reboot your system.\r\n                                <Code code={`# exit\\n# reboot`} />\r\n                                <p>\r\n                                    Finally You have installed the Arch Linux.😊\r\n                                    <br/>\r\n                                    Login with your credential and enjoy Your Linux with Terminal.\r\n                                </p>\r\n                            </p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ArchGuide\r\n","import React from 'react';\r\nimport Code from '../../layout/Code';\r\nimport MetaData from '../../layout/MetaData';\r\nimport './ImportantLinxuCommand.css';\r\n\r\nconst ImportantLinuxCommand = () => {\r\n    return (\r\n        <>\r\n            <MetaData title={'Linux Important Commands'} />\r\n            <section className=\"blogs\">\r\n                <div className=\"linux-command-blog\" >\r\n                    <h1>Important Linux Commands</h1>\r\n                    <img className=\"thumbnail\" src=\"/img/linux.jpg\" alt=\"arch_thumbnail\" />\r\n                    <h3>Arjun Kumar </h3>\r\n                    <span>September, 2021</span>\r\n                    <p>\r\n                        Here we have some important Linux commands. After reading and practicing this. You can use any linux distribution using command prompt.\r\n                    </p>\r\n                    <h2>Let's Command Your Terminal</h2>\r\n                    <p className=\"note\">\r\n                        <strong>Note : </strong> Linux commands are case-sensitive.\r\n                    </p>\r\n                    <h2>1. pwd</h2>\r\n                    <p>\r\n                        The <b>P</b>rint <b>w</b>orking <b>d</b>irectory command is used to display the location of the current working directory.\r\n                        <Code code={`$ pwd\\n/home/arjun`} />\r\n                    </p>\r\n                    <h2>2. cd</h2>\r\n                    <p>\r\n                        <b>C</b>hange <b>d</b>directory command is used to change the working directory.\r\n                        <Code code={`$ pwd/ \\n/home/arjun \\n$ cd music \\n$ pwd \\n/home/arjun/music`} />\r\n                        You can even change to <code className=\"highlight\">/</code> directory\r\n                        <Code code={`$ cd / \\n$ pwd \\n/`} />\r\n                        or <code className=\"highlight\">~</code> to back your home directory\r\n                        <Code code={`$ cd ~ \\n$ pwd \\n/home/arjun`} />\r\n                        <p className=\"note\">\r\n                            <strong>Note : </strong> There is also a directory <code className=\"highlight\">\"root\"</code> (as word) for superuser's home which is different from root <code className=\"highlight\">/</code> directory. Actually, <code className=\"highlight\">\"root\"</code> directory is an immediate subdirectory of <code className=\"highlight\">/</code> root directory.\r\n                        </p>\r\n                        So you can try and observe.\r\n                        <Code code={`$ cd / \\n$ cd root \\nbash: cd: root: Permission denied \\n$ cd home \\n$ pwd \\n/home \\n$ cd arjun \\n$ pwd \\n/home/arjun \\n$ cd music \\n$ pwd \\n/home/arjun/music`} />\r\n                        To go up to the parent directory, we have special symbol of two dots <code className=\"highlight\">..</code>\r\n                        <Code code={`$ pwd \\n/home/arjun/music \\n$ cd .. \\n/home/arjun \\n$ cd .. \\n/home`} />\r\n                    </p>\r\n                    <h2>3. mkdir</h2>\r\n                    <p>\r\n                        <code className=\"highlight\">mkdir</code> command makes directories, if they do not exist.\r\n                        <Code code={`$ pwd/ \\n/home/arjun \\n$ mkdir linux-commands \\n$ cd linux-commands \\n$ pwd \\n/home/arjun/linux-commands`} />\r\n                        we can even create multiple directories\r\n                        <Code code={`$ cd /tmp \\n$ pwd   \\n/tmp \\n$ mkdir universe galaxy  \\n$ cd universe \\n$ pwd \\n/tmp/universe \\n$ cd .. \\n$ cd galaxy \\n$ pwd \\n/tmp/galaxy`} />\r\n                    </p>\r\n                    <h2>4. echo</h2>\r\n                    <p>\r\n                        echo displays its arguments back out again.\r\n                        <Code code={`$ echo \"Here you are!\" \\nHere you are!`} />\r\n                        We can easily create small file by combining echo with redirect &gt; so that the output of echo is redirected to a file instead of standard output(screen).\r\n                        <Code code={`$ cd /tmp/solar-system/earth \\n$ echo \"hey it's a pen to write or dig with.\" > msg.txt \\n$ echo \"easy to create a file\" > msg2.txt \\n$ whoami > user.txt`} />\r\n                        <p className='note'>\r\n                            <strong>NOTE : </strong>You can also use touch command to create a file.\r\n                        </p>\r\n                    </p>\r\n                    <h2>5. ls</h2>\r\n                    <p>\r\n                        ls commands lists directory contents\r\n                        <Code code={`$ pwd \\n/tmp/solar-system/earth \\n$ ls \\nmsg.txt msg2.txt user.txt \\n$ mkdir demo \\n$ ls \\ndemo msg.txt msg2.txt user.txt`} />\r\n                        We can even redirect the output of ls to a file.\r\n                        <Code code={`$ pwd \\n/tmp/solar-system/earth \\n$ ls > file-list.txt \\n$ ls \\ndemo file-list.txt msg.txt msg2.txt user.txt`} />\r\n                        <p className='note'>\r\n                            <strong>NOTE : </strong>We can use some switches with ls commands\r\n\r\n                            <li >-l for long listing of directory contents</li>\r\n                            <li>-a do not ignore entries starting with .</li>\r\n\r\n                            man command prints reference manuals for almost every linux commands.\r\n                        </p>\r\n                        <Code code={`$ pwd \\n/tmp/solar-system/earth \\n$ ls -l \\ndrwxrwxr-x. 3 arjun  arjun  1640 sept 22 17:17  demo \\n-rw-rw-r--. 1 arjun  arjun  143309 sept 22 11:52  file-list.txt \\n-rw-rw-r--. 1 arjun  arjun  2386871 sept 22 11:57  msg.txt \\n-rw-rw-r--. 1 arjun  arjun  2386871 sept 22 11:57  msg2.txt \\n-rw-rw-r--. 1 arjun  arjun  2669948 sept 22 12:26  user.txt`} />\r\n                    </p>\r\n                    <h2>6. cat</h2>\r\n                    <p>\r\n                        <code className=\"highlight\"> cat</code> command concatenates files and print on the standard output.\r\n                        <br/>\r\n                        <br/>\r\n                        So we can view the content of files we have created.\r\n                        <Code code={`$ pwd\r\n/tmp/solar-system/earth\r\n$ cat file-list.txt\r\ndemo file-list.txt msg.txt msg2.txt user.txt\r\n$ cat msg.txt\r\nhey it's a pen to write or dig with.\r\n$ cat msg2.txt\r\neasy to create a file`} />\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImportantLinuxCommand\r\n","import React from 'react'\r\nimport { Route, Switch, useLocation, Redirect } from 'react-router-dom'\r\nimport Header from './components/layout/Header'\r\nimport Footer from './components/layout/Footer'\r\nimport Home from './components/home/Home'\r\nimport Projects from './components/projects/Projects'\r\nimport Blogs from './components/blogs/Blogs'\r\nimport ArchGuide from './components/blogs/archGuide/ArchGuide'\r\nimport ImportantLinuxCommand from './components/blogs/importLinuxCommand/ImportantLinuxCommand'\r\n\r\nconst App = () => {\r\n  const {search} = useLocation();\r\n  \r\n  const redirectUrl = () => {\r\n    if(search === '?/blogs'){\r\n     return <Redirect to={{ pathname: \"/blogs\"}} />\r\n    }\r\n    if(search === '?/projects'){\r\n     return <Redirect to={{ pathname: \"/projects\"}} />\r\n    }\r\n    if(search === '?/arch_guide'){\r\n     return <Redirect to={{ pathname: \"/arch_guide\"}} />\r\n    }\r\n    if(search === '?/important-linux-command'){\r\n     return <Redirect to={{ pathname: \"/important-linux-command\"}} />\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { redirectUrl() }\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/projects\" component={Projects} exact />\r\n        <Route path=\"/blogs\" component={Blogs} exact />\r\n        <Route path=\"/arch_guide\" component={ArchGuide} exact />\r\n        <Route path=\"/important-linux-command\" component={ImportantLinuxCommand} exact />\r\n      </Switch>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}